// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#include "data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace dapi {
namespace data {
class QuestDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuestData>
      _instance;
} _QuestData_default_instance_;
class PortalDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PortalData>
      _instance;
} _PortalData_default_instance_;
class MissileDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MissileData>
      _instance;
} _MissileData_default_instance_;
class ObjectDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ObjectData>
      _instance;
} _ObjectData_default_instance_;
class MonsterDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MonsterData>
      _instance;
} _MonsterData_default_instance_;
class TriggerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TriggerData>
      _instance;
} _TriggerData_default_instance_;
class TileDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TileData>
      _instance;
} _TileData_default_instance_;
class TownerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TownerData>
      _instance;
} _TownerData_default_instance_;
class ItemDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemData>
      _instance;
} _ItemData_default_instance_;
class PlayerDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerData>
      _instance;
} _PlayerData_default_instance_;
}  // namespace data
}  // namespace dapi
namespace protobuf_data_2eproto {
static void InitDefaultsQuestData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::data::_QuestData_default_instance_;
    new (ptr) ::dapi::data::QuestData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::data::QuestData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QuestData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQuestData}, {}};

static void InitDefaultsPortalData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::data::_PortalData_default_instance_;
    new (ptr) ::dapi::data::PortalData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::data::PortalData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PortalData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPortalData}, {}};

static void InitDefaultsMissileData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::data::_MissileData_default_instance_;
    new (ptr) ::dapi::data::MissileData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::data::MissileData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MissileData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMissileData}, {}};

static void InitDefaultsObjectData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::data::_ObjectData_default_instance_;
    new (ptr) ::dapi::data::ObjectData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::data::ObjectData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ObjectData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsObjectData}, {}};

static void InitDefaultsMonsterData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::data::_MonsterData_default_instance_;
    new (ptr) ::dapi::data::MonsterData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::data::MonsterData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MonsterData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMonsterData}, {}};

static void InitDefaultsTriggerData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::data::_TriggerData_default_instance_;
    new (ptr) ::dapi::data::TriggerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::data::TriggerData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TriggerData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTriggerData}, {}};

static void InitDefaultsTileData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::data::_TileData_default_instance_;
    new (ptr) ::dapi::data::TileData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::data::TileData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TileData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTileData}, {}};

static void InitDefaultsTownerData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::data::_TownerData_default_instance_;
    new (ptr) ::dapi::data::TownerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::data::TownerData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TownerData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTownerData}, {}};

static void InitDefaultsItemData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::data::_ItemData_default_instance_;
    new (ptr) ::dapi::data::ItemData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::data::ItemData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ItemData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsItemData}, {}};

static void InitDefaultsPlayerData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::dapi::data::_PlayerData_default_instance_;
    new (ptr) ::dapi::data::PlayerData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dapi::data::PlayerData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PlayerData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPlayerData}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_QuestData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PortalData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MissileData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ObjectData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MonsterData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TriggerData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TileData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TownerData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ItemData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlayerData.base);
}

}  // namespace protobuf_data_2eproto
namespace dapi {
namespace data {

// ===================================================================

void QuestData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuestData::kIdFieldNumber;
const int QuestData::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuestData::QuestData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_2eproto::scc_info_QuestData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.data.QuestData)
}
QuestData::QuestData(const QuestData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&id_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:dapi.data.QuestData)
}

void QuestData::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
}

QuestData::~QuestData() {
  // @@protoc_insertion_point(destructor:dapi.data.QuestData)
  SharedDtor();
}

void QuestData::SharedDtor() {
}

void QuestData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QuestData& QuestData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_2eproto::scc_info_QuestData.base);
  return *internal_default_instance();
}


void QuestData::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.data.QuestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&id_)) + sizeof(state_));
  _internal_metadata_.Clear();
}

bool QuestData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.data.QuestData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.data.QuestData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.data.QuestData)
  return false;
#undef DO_
}

void QuestData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.data.QuestData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.data.QuestData)
}

size_t QuestData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.data.QuestData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QuestData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const QuestData*>(&from));
}

void QuestData::MergeFrom(const QuestData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.data.QuestData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void QuestData::CopyFrom(const QuestData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.data.QuestData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuestData::IsInitialized() const {
  return true;
}

void QuestData::Swap(QuestData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuestData::InternalSwap(QuestData* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string QuestData::GetTypeName() const {
  return "dapi.data.QuestData";
}


// ===================================================================

void PortalData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PortalData::kXFieldNumber;
const int PortalData::kYFieldNumber;
const int PortalData::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PortalData::PortalData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_2eproto::scc_info_PortalData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.data.PortalData)
}
PortalData::PortalData(const PortalData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&player_) -
    reinterpret_cast<char*>(&x_)) + sizeof(player_));
  // @@protoc_insertion_point(copy_constructor:dapi.data.PortalData)
}

void PortalData::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_) -
      reinterpret_cast<char*>(&x_)) + sizeof(player_));
}

PortalData::~PortalData() {
  // @@protoc_insertion_point(destructor:dapi.data.PortalData)
  SharedDtor();
}

void PortalData::SharedDtor() {
}

void PortalData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PortalData& PortalData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_2eproto::scc_info_PortalData.base);
  return *internal_default_instance();
}


void PortalData::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.data.PortalData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_) -
      reinterpret_cast<char*>(&x_)) + sizeof(player_));
  _internal_metadata_.Clear();
}

bool PortalData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.data.PortalData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.data.PortalData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.data.PortalData)
  return false;
#undef DO_
}

void PortalData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.data.PortalData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->y(), output);
  }

  // uint32 player = 3;
  if (this->player() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->player(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.data.PortalData)
}

size_t PortalData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.data.PortalData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());
  }

  // uint32 player = 3;
  if (this->player() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PortalData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PortalData*>(&from));
}

void PortalData::MergeFrom(const PortalData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.data.PortalData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.player() != 0) {
    set_player(from.player());
  }
}

void PortalData::CopyFrom(const PortalData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.data.PortalData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PortalData::IsInitialized() const {
  return true;
}

void PortalData::Swap(PortalData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PortalData::InternalSwap(PortalData* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(player_, other->player_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string PortalData::GetTypeName() const {
  return "dapi.data.PortalData";
}


// ===================================================================

void MissileData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MissileData::kTypeFieldNumber;
const int MissileData::kXFieldNumber;
const int MissileData::kYFieldNumber;
const int MissileData::kXvelFieldNumber;
const int MissileData::kYvelFieldNumber;
const int MissileData::kSxFieldNumber;
const int MissileData::kSyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MissileData::MissileData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_2eproto::scc_info_MissileData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.data.MissileData)
}
MissileData::MissileData(const MissileData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&sy_) -
    reinterpret_cast<char*>(&type_)) + sizeof(sy_));
  // @@protoc_insertion_point(copy_constructor:dapi.data.MissileData)
}

void MissileData::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sy_) -
      reinterpret_cast<char*>(&type_)) + sizeof(sy_));
}

MissileData::~MissileData() {
  // @@protoc_insertion_point(destructor:dapi.data.MissileData)
  SharedDtor();
}

void MissileData::SharedDtor() {
}

void MissileData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MissileData& MissileData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_2eproto::scc_info_MissileData.base);
  return *internal_default_instance();
}


void MissileData::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.data.MissileData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sy_) -
      reinterpret_cast<char*>(&type_)) + sizeof(sy_));
  _internal_metadata_.Clear();
}

bool MissileData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.data.MissileData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 xvel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &xvel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 yvel = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &yvel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 sx = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 sy = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &sy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.data.MissileData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.data.MissileData)
  return false;
#undef DO_
}

void MissileData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.data.MissileData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->type(), output);
  }

  // uint32 x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->x(), output);
  }

  // uint32 y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->y(), output);
  }

  // sint32 xvel = 4;
  if (this->xvel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->xvel(), output);
  }

  // sint32 yvel = 5;
  if (this->yvel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->yvel(), output);
  }

  // sint32 sx = 6;
  if (this->sx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->sx(), output);
  }

  // sint32 sy = 7;
  if (this->sy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->sy(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.data.MissileData)
}

size_t MissileData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.data.MissileData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // sint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->type());
  }

  // uint32 x = 2;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  // uint32 y = 3;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());
  }

  // sint32 xvel = 4;
  if (this->xvel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->xvel());
  }

  // sint32 yvel = 5;
  if (this->yvel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->yvel());
  }

  // sint32 sx = 6;
  if (this->sx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->sx());
  }

  // sint32 sy = 7;
  if (this->sy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->sy());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MissileData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MissileData*>(&from));
}

void MissileData::MergeFrom(const MissileData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.data.MissileData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.xvel() != 0) {
    set_xvel(from.xvel());
  }
  if (from.yvel() != 0) {
    set_yvel(from.yvel());
  }
  if (from.sx() != 0) {
    set_sx(from.sx());
  }
  if (from.sy() != 0) {
    set_sy(from.sy());
  }
}

void MissileData::CopyFrom(const MissileData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.data.MissileData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MissileData::IsInitialized() const {
  return true;
}

void MissileData::Swap(MissileData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MissileData::InternalSwap(MissileData* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(xvel_, other->xvel_);
  swap(yvel_, other->yvel_);
  swap(sx_, other->sx_);
  swap(sy_, other->sy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MissileData::GetTypeName() const {
  return "dapi.data.MissileData";
}


// ===================================================================

void ObjectData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectData::kXFieldNumber;
const int ObjectData::kYFieldNumber;
const int ObjectData::kTypeFieldNumber;
const int ObjectData::kShrineTypeFieldNumber;
const int ObjectData::kSolidFieldNumber;
const int ObjectData::kDoorStateFieldNumber;
const int ObjectData::kSelectableFieldNumber;
const int ObjectData::kIndexFieldNumber;
const int ObjectData::kTrappedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectData::ObjectData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_2eproto::scc_info_ObjectData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.data.ObjectData)
}
ObjectData::ObjectData(const ObjectData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&index_) -
    reinterpret_cast<char*>(&x_)) + sizeof(index_));
  // @@protoc_insertion_point(copy_constructor:dapi.data.ObjectData)
}

void ObjectData::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&x_)) + sizeof(index_));
}

ObjectData::~ObjectData() {
  // @@protoc_insertion_point(destructor:dapi.data.ObjectData)
  SharedDtor();
}

void ObjectData::SharedDtor() {
}

void ObjectData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectData& ObjectData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_2eproto::scc_info_ObjectData.base);
  return *internal_default_instance();
}


void ObjectData::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.data.ObjectData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&x_)) + sizeof(index_));
  _internal_metadata_.Clear();
}

bool ObjectData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.data.ObjectData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 shrineType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &shrinetype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool solid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &solid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 doorState = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &doorstate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool selectable = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &selectable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 index = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool trapped = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &trapped_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.data.ObjectData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.data.ObjectData)
  return false;
#undef DO_
}

void ObjectData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.data.ObjectData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->x(), output);
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->y(), output);
  }

  // sint32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->type(), output);
  }

  // sint32 shrineType = 4;
  if (this->shrinetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->shrinetype(), output);
  }

  // bool solid = 5;
  if (this->solid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->solid(), output);
  }

  // sint32 doorState = 6;
  if (this->doorstate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->doorstate(), output);
  }

  // bool selectable = 7;
  if (this->selectable() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->selectable(), output);
  }

  // uint32 index = 8;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->index(), output);
  }

  // bool trapped = 9;
  if (this->trapped() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->trapped(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.data.ObjectData)
}

size_t ObjectData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.data.ObjectData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->x());
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->y());
  }

  // sint32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->type());
  }

  // sint32 shrineType = 4;
  if (this->shrinetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->shrinetype());
  }

  // sint32 doorState = 6;
  if (this->doorstate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->doorstate());
  }

  // bool solid = 5;
  if (this->solid() != 0) {
    total_size += 1 + 1;
  }

  // bool selectable = 7;
  if (this->selectable() != 0) {
    total_size += 1 + 1;
  }

  // bool trapped = 9;
  if (this->trapped() != 0) {
    total_size += 1 + 1;
  }

  // uint32 index = 8;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ObjectData*>(&from));
}

void ObjectData::MergeFrom(const ObjectData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.data.ObjectData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.shrinetype() != 0) {
    set_shrinetype(from.shrinetype());
  }
  if (from.doorstate() != 0) {
    set_doorstate(from.doorstate());
  }
  if (from.solid() != 0) {
    set_solid(from.solid());
  }
  if (from.selectable() != 0) {
    set_selectable(from.selectable());
  }
  if (from.trapped() != 0) {
    set_trapped(from.trapped());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void ObjectData::CopyFrom(const ObjectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.data.ObjectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectData::IsInitialized() const {
  return true;
}

void ObjectData::Swap(ObjectData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectData::InternalSwap(ObjectData* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(type_, other->type_);
  swap(shrinetype_, other->shrinetype_);
  swap(doorstate_, other->doorstate_);
  swap(solid_, other->solid_);
  swap(selectable_, other->selectable_);
  swap(trapped_, other->trapped_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ObjectData::GetTypeName() const {
  return "dapi.data.ObjectData";
}


// ===================================================================

void MonsterData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonsterData::kIndexFieldNumber;
const int MonsterData::kXFieldNumber;
const int MonsterData::kYFieldNumber;
const int MonsterData::kFutxFieldNumber;
const int MonsterData::kFutyFieldNumber;
const int MonsterData::kNameFieldNumber;
const int MonsterData::kTypeFieldNumber;
const int MonsterData::kKillsFieldNumber;
const int MonsterData::kModeFieldNumber;
const int MonsterData::kUniqueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonsterData::MonsterData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_2eproto::scc_info_MonsterData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.data.MonsterData)
}
MonsterData::MonsterData(const MonsterData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&unique_) -
    reinterpret_cast<char*>(&index_)) + sizeof(unique_));
  // @@protoc_insertion_point(copy_constructor:dapi.data.MonsterData)
}

void MonsterData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unique_) -
      reinterpret_cast<char*>(&index_)) + sizeof(unique_));
}

MonsterData::~MonsterData() {
  // @@protoc_insertion_point(destructor:dapi.data.MonsterData)
  SharedDtor();
}

void MonsterData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MonsterData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MonsterData& MonsterData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_2eproto::scc_info_MonsterData.base);
  return *internal_default_instance();
}


void MonsterData::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.data.MonsterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&unique_) -
      reinterpret_cast<char*>(&index_)) + sizeof(unique_));
  _internal_metadata_.Clear();
}

bool MonsterData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.data.MonsterData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 futx = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &futx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 futy = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &futy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapi.data.MonsterData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 kills = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &kills_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 mode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool unique = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unique_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.data.MonsterData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.data.MonsterData)
  return false;
#undef DO_
}

void MonsterData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.data.MonsterData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // sint32 x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->x(), output);
  }

  // sint32 y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->y(), output);
  }

  // sint32 futx = 4;
  if (this->futx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->futx(), output);
  }

  // sint32 futy = 5;
  if (this->futy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->futy(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapi.data.MonsterData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // sint32 type = 7;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->type(), output);
  }

  // sint32 kills = 8;
  if (this->kills() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->kills(), output);
  }

  // sint32 mode = 9;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->mode(), output);
  }

  // bool unique = 10;
  if (this->unique() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->unique(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.data.MonsterData)
}

size_t MonsterData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.data.MonsterData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  // sint32 x = 2;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->x());
  }

  // sint32 y = 3;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->y());
  }

  // sint32 futx = 4;
  if (this->futx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->futx());
  }

  // sint32 futy = 5;
  if (this->futy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->futy());
  }

  // sint32 type = 7;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->type());
  }

  // sint32 kills = 8;
  if (this->kills() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->kills());
  }

  // sint32 mode = 9;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->mode());
  }

  // bool unique = 10;
  if (this->unique() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonsterData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const MonsterData*>(&from));
}

void MonsterData::MergeFrom(const MonsterData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.data.MonsterData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.futx() != 0) {
    set_futx(from.futx());
  }
  if (from.futy() != 0) {
    set_futy(from.futy());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.kills() != 0) {
    set_kills(from.kills());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.unique() != 0) {
    set_unique(from.unique());
  }
}

void MonsterData::CopyFrom(const MonsterData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.data.MonsterData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonsterData::IsInitialized() const {
  return true;
}

void MonsterData::Swap(MonsterData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonsterData::InternalSwap(MonsterData* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(index_, other->index_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(futx_, other->futx_);
  swap(futy_, other->futy_);
  swap(type_, other->type_);
  swap(kills_, other->kills_);
  swap(mode_, other->mode_);
  swap(unique_, other->unique_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string MonsterData::GetTypeName() const {
  return "dapi.data.MonsterData";
}


// ===================================================================

void TriggerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TriggerData::kLvlFieldNumber;
const int TriggerData::kXFieldNumber;
const int TriggerData::kYFieldNumber;
const int TriggerData::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TriggerData::TriggerData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_2eproto::scc_info_TriggerData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.data.TriggerData)
}
TriggerData::TriggerData(const TriggerData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&lvl_, &from.lvl_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&lvl_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:dapi.data.TriggerData)
}

void TriggerData::SharedCtor() {
  ::memset(&lvl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&lvl_)) + sizeof(type_));
}

TriggerData::~TriggerData() {
  // @@protoc_insertion_point(destructor:dapi.data.TriggerData)
  SharedDtor();
}

void TriggerData::SharedDtor() {
}

void TriggerData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TriggerData& TriggerData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_2eproto::scc_info_TriggerData.base);
  return *internal_default_instance();
}


void TriggerData::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.data.TriggerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lvl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&lvl_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool TriggerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.data.TriggerData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 lvl = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &lvl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.data.TriggerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.data.TriggerData)
  return false;
#undef DO_
}

void TriggerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.data.TriggerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 lvl = 1;
  if (this->lvl() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->lvl(), output);
  }

  // sint32 x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->x(), output);
  }

  // sint32 y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->y(), output);
  }

  // sint32 type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->type(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.data.TriggerData)
}

size_t TriggerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.data.TriggerData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // uint32 lvl = 1;
  if (this->lvl() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->lvl());
  }

  // sint32 x = 2;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->x());
  }

  // sint32 y = 3;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->y());
  }

  // sint32 type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TriggerData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TriggerData*>(&from));
}

void TriggerData::MergeFrom(const TriggerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.data.TriggerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.lvl() != 0) {
    set_lvl(from.lvl());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void TriggerData::CopyFrom(const TriggerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.data.TriggerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TriggerData::IsInitialized() const {
  return true;
}

void TriggerData::Swap(TriggerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TriggerData::InternalSwap(TriggerData* other) {
  using std::swap;
  swap(lvl_, other->lvl_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TriggerData::GetTypeName() const {
  return "dapi.data.TriggerData";
}


// ===================================================================

void TileData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TileData::kTypeFieldNumber;
const int TileData::kSolidFieldNumber;
const int TileData::kXFieldNumber;
const int TileData::kYFieldNumber;
const int TileData::kStopMissileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TileData::TileData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_2eproto::scc_info_TileData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.data.TileData)
}
TileData::TileData(const TileData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&type_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:dapi.data.TileData)
}

void TileData::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&type_)) + sizeof(y_));
}

TileData::~TileData() {
  // @@protoc_insertion_point(destructor:dapi.data.TileData)
  SharedDtor();
}

void TileData::SharedDtor() {
}

void TileData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TileData& TileData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_2eproto::scc_info_TileData.base);
  return *internal_default_instance();
}


void TileData::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.data.TileData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&type_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool TileData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.data.TileData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool solid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &solid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stopMissile = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stopmissile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.data.TileData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.data.TileData)
  return false;
#undef DO_
}

void TileData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.data.TileData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->type(), output);
  }

  // bool solid = 2;
  if (this->solid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->solid(), output);
  }

  // sint32 x = 3;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->x(), output);
  }

  // sint32 y = 4;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->y(), output);
  }

  // bool stopMissile = 5;
  if (this->stopmissile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->stopmissile(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.data.TileData)
}

size_t TileData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.data.TileData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // sint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->type());
  }

  // sint32 x = 3;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->x());
  }

  // bool solid = 2;
  if (this->solid() != 0) {
    total_size += 1 + 1;
  }

  // bool stopMissile = 5;
  if (this->stopmissile() != 0) {
    total_size += 1 + 1;
  }

  // sint32 y = 4;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TileData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TileData*>(&from));
}

void TileData::MergeFrom(const TileData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.data.TileData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.solid() != 0) {
    set_solid(from.solid());
  }
  if (from.stopmissile() != 0) {
    set_stopmissile(from.stopmissile());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void TileData::CopyFrom(const TileData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.data.TileData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TileData::IsInitialized() const {
  return true;
}

void TileData::Swap(TileData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TileData::InternalSwap(TileData* other) {
  using std::swap;
  swap(type_, other->type_);
  swap(x_, other->x_);
  swap(solid_, other->solid_);
  swap(stopmissile_, other->stopmissile_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TileData::GetTypeName() const {
  return "dapi.data.TileData";
}


// ===================================================================

void TownerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TownerData::kIDFieldNumber;
const int TownerData::kTtypeFieldNumber;
const int TownerData::kTxFieldNumber;
const int TownerData::kTyFieldNumber;
const int TownerData::kTNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TownerData::TownerData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_2eproto::scc_info_TownerData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.data.TownerData)
}
TownerData::TownerData(const TownerData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _tname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from._tname().size() > 0) {
    _tname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._tname_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_ty_) -
    reinterpret_cast<char*>(&id_)) + sizeof(_ty_));
  // @@protoc_insertion_point(copy_constructor:dapi.data.TownerData)
}

void TownerData::SharedCtor() {
  _tname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_ty_) -
      reinterpret_cast<char*>(&id_)) + sizeof(_ty_));
}

TownerData::~TownerData() {
  // @@protoc_insertion_point(destructor:dapi.data.TownerData)
  SharedDtor();
}

void TownerData::SharedDtor() {
  _tname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TownerData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TownerData& TownerData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_2eproto::scc_info_TownerData.base);
  return *internal_default_instance();
}


void TownerData::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.data.TownerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _tname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_ty_) -
      reinterpret_cast<char*>(&id_)) + sizeof(_ty_));
  _internal_metadata_.Clear();
}

bool TownerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.data.TownerData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _ttype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_ttype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _tx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_tx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _ty = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string _tName = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__tname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->_tname().data(), static_cast<int>(this->_tname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapi.data.TownerData._tName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.data.TownerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.data.TownerData)
  return false;
#undef DO_
}

void TownerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.data.TownerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint32 _ttype = 2;
  if (this->_ttype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_ttype(), output);
  }

  // sint32 _tx = 3;
  if (this->_tx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->_tx(), output);
  }

  // sint32 _ty = 4;
  if (this->_ty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->_ty(), output);
  }

  // string _tName = 5;
  if (this->_tname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->_tname().data(), static_cast<int>(this->_tname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapi.data.TownerData._tName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->_tname(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.data.TownerData)
}

size_t TownerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.data.TownerData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string _tName = 5;
  if (this->_tname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_tname());
  }

  // uint32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 _ttype = 2;
  if (this->_ttype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_ttype());
  }

  // sint32 _tx = 3;
  if (this->_tx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_tx());
  }

  // sint32 _ty = 4;
  if (this->_ty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ty());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TownerData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const TownerData*>(&from));
}

void TownerData::MergeFrom(const TownerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.data.TownerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._tname().size() > 0) {

    _tname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._tname_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from._ttype() != 0) {
    set__ttype(from._ttype());
  }
  if (from._tx() != 0) {
    set__tx(from._tx());
  }
  if (from._ty() != 0) {
    set__ty(from._ty());
  }
}

void TownerData::CopyFrom(const TownerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.data.TownerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TownerData::IsInitialized() const {
  return true;
}

void TownerData::Swap(TownerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TownerData::InternalSwap(TownerData* other) {
  using std::swap;
  _tname_.Swap(&other->_tname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(_ttype_, other->_ttype_);
  swap(_tx_, other->_tx_);
  swap(_ty_, other->_ty_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string TownerData::GetTypeName() const {
  return "dapi.data.TownerData";
}


// ===================================================================

void ItemData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemData::kIDFieldNumber;
const int ItemData::kItypeFieldNumber;
const int ItemData::kIxFieldNumber;
const int ItemData::kIyFieldNumber;
const int ItemData::kIIdentifiedFieldNumber;
const int ItemData::kIMagicalFieldNumber;
const int ItemData::kINameFieldNumber;
const int ItemData::kIINameFieldNumber;
const int ItemData::kIClassFieldNumber;
const int ItemData::kICursFieldNumber;
const int ItemData::kIValueFieldNumber;
const int ItemData::kIMinDamFieldNumber;
const int ItemData::kIMaxDamFieldNumber;
const int ItemData::kIACFieldNumber;
const int ItemData::kIFlagsFieldNumber;
const int ItemData::kIMiscIdFieldNumber;
const int ItemData::kISpellFieldNumber;
const int ItemData::kIChargesFieldNumber;
const int ItemData::kIMaxChargesFieldNumber;
const int ItemData::kIDurabilityFieldNumber;
const int ItemData::kIMaxDurFieldNumber;
const int ItemData::kIPLDamFieldNumber;
const int ItemData::kIPLToHitFieldNumber;
const int ItemData::kIPLACFieldNumber;
const int ItemData::kIPLStrFieldNumber;
const int ItemData::kIPLMagFieldNumber;
const int ItemData::kIPLDexFieldNumber;
const int ItemData::kIPLVitFieldNumber;
const int ItemData::kIPLFRFieldNumber;
const int ItemData::kIPLLRFieldNumber;
const int ItemData::kIPLMRFieldNumber;
const int ItemData::kIPLManaFieldNumber;
const int ItemData::kIPLHPFieldNumber;
const int ItemData::kIPLDamModFieldNumber;
const int ItemData::kIPLGetHitFieldNumber;
const int ItemData::kIPLLightFieldNumber;
const int ItemData::kISplLvlAddFieldNumber;
const int ItemData::kIFMinDamFieldNumber;
const int ItemData::kIFMaxDamFieldNumber;
const int ItemData::kILMinDamFieldNumber;
const int ItemData::kILMaxDamFieldNumber;
const int ItemData::kIPrePowerFieldNumber;
const int ItemData::kISufPowerFieldNumber;
const int ItemData::kIMinStrFieldNumber;
const int ItemData::kIMinMagFieldNumber;
const int ItemData::kIMinDexFieldNumber;
const int ItemData::kIStatFlagFieldNumber;
const int ItemData::kIDidxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemData::ItemData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_2eproto::scc_info_ItemData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.data.ItemData)
}
ItemData::ItemData(const ItemData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _iname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from._iname().size() > 0) {
    _iname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._iname_);
  }
  _iiname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from._iiname().size() > 0) {
    _iiname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._iiname_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ididx_) -
    reinterpret_cast<char*>(&id_)) + sizeof(ididx_));
  // @@protoc_insertion_point(copy_constructor:dapi.data.ItemData)
}

void ItemData::SharedCtor() {
  _iname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _iiname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ididx_) -
      reinterpret_cast<char*>(&id_)) + sizeof(ididx_));
}

ItemData::~ItemData() {
  // @@protoc_insertion_point(destructor:dapi.data.ItemData)
  SharedDtor();
}

void ItemData::SharedDtor() {
  _iname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _iiname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ItemData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ItemData& ItemData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_2eproto::scc_info_ItemData.base);
  return *internal_default_instance();
}


void ItemData::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.data.ItemData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _iname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _iiname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ididx_) -
      reinterpret_cast<char*>(&id_)) + sizeof(ididx_));
  _internal_metadata_.Clear();
}

bool ItemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.data.ItemData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _itype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_itype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _ix = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ix_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool _iIdentified = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_iidentified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _iMagical = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_imagical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string _iName = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__iname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->_iname().data(), static_cast<int>(this->_iname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapi.data.ItemData._iName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string _iIName = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__iiname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->_iiname().data(), static_cast<int>(this->_iiname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapi.data.ItemData._iIName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _iClass = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_iclass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iCurs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_icurs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iValue = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ivalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iMinDam = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_imindam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iMaxDam = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_imaxdam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iAC = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iac_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iFlags = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iflags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iMiscId = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_imiscid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iSpell = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ispell_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iCharges = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_icharges_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iMaxCharges = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_imaxcharges_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iDurability = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_idurability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iMaxDur = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_imaxdur_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLDam = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ipldam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLToHit = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ipltohit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLAC = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iplac_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLStr = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iplstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLMag = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iplmag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLDex = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ipldex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLVit = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iplvit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLFR = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iplfr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLLR = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ipllr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLMR = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iplmr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLMana = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iplmana_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLHP = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iplhp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLDamMod = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ipldammod_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLGetHit = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iplgethit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPLLight = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ipllight_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iSplLvlAdd = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ispllvladd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iFMinDam = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ifmindam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iFMaxDam = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ifmaxdam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iLMinDam = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ilmindam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iLMaxDam = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_ilmaxdam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iPrePower = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iprepower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iSufPower = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_isufpower_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iMinStr = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iminstr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iMinMag = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_iminmag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _iMinDex = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_imindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool _iStatFlag = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &_istatflag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 IDidx = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 384 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &ididx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.data.ItemData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.data.ItemData)
  return false;
#undef DO_
}

void ItemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.data.ItemData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ID = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // sint32 _itype = 2;
  if (this->_itype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->_itype(), output);
  }

  // sint32 _ix = 3;
  if (this->_ix() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->_ix(), output);
  }

  // sint32 _iy = 4;
  if (this->_iy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->_iy(), output);
  }

  // bool _iIdentified = 5;
  if (this->_iidentified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->_iidentified(), output);
  }

  // uint32 _iMagical = 6;
  if (this->_imagical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->_imagical(), output);
  }

  // string _iName = 7;
  if (this->_iname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->_iname().data(), static_cast<int>(this->_iname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapi.data.ItemData._iName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->_iname(), output);
  }

  // string _iIName = 8;
  if (this->_iiname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->_iiname().data(), static_cast<int>(this->_iiname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapi.data.ItemData._iIName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->_iiname(), output);
  }

  // uint32 _iClass = 9;
  if (this->_iclass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->_iclass(), output);
  }

  // sint32 _iCurs = 10;
  if (this->_icurs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->_icurs(), output);
  }

  // sint32 _iValue = 11;
  if (this->_ivalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->_ivalue(), output);
  }

  // sint32 _iMinDam = 12;
  if (this->_imindam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->_imindam(), output);
  }

  // sint32 _iMaxDam = 13;
  if (this->_imaxdam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->_imaxdam(), output);
  }

  // sint32 _iAC = 14;
  if (this->_iac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(14, this->_iac(), output);
  }

  // sint32 _iFlags = 15;
  if (this->_iflags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(15, this->_iflags(), output);
  }

  // sint32 _iMiscId = 16;
  if (this->_imiscid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(16, this->_imiscid(), output);
  }

  // sint32 _iSpell = 17;
  if (this->_ispell() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(17, this->_ispell(), output);
  }

  // sint32 _iCharges = 18;
  if (this->_icharges() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(18, this->_icharges(), output);
  }

  // sint32 _iMaxCharges = 19;
  if (this->_imaxcharges() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(19, this->_imaxcharges(), output);
  }

  // sint32 _iDurability = 20;
  if (this->_idurability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(20, this->_idurability(), output);
  }

  // sint32 _iMaxDur = 21;
  if (this->_imaxdur() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(21, this->_imaxdur(), output);
  }

  // sint32 _iPLDam = 22;
  if (this->_ipldam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(22, this->_ipldam(), output);
  }

  // sint32 _iPLToHit = 23;
  if (this->_ipltohit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(23, this->_ipltohit(), output);
  }

  // sint32 _iPLAC = 24;
  if (this->_iplac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(24, this->_iplac(), output);
  }

  // sint32 _iPLStr = 25;
  if (this->_iplstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(25, this->_iplstr(), output);
  }

  // sint32 _iPLMag = 26;
  if (this->_iplmag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(26, this->_iplmag(), output);
  }

  // sint32 _iPLDex = 27;
  if (this->_ipldex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(27, this->_ipldex(), output);
  }

  // sint32 _iPLVit = 28;
  if (this->_iplvit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(28, this->_iplvit(), output);
  }

  // sint32 _iPLFR = 29;
  if (this->_iplfr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(29, this->_iplfr(), output);
  }

  // sint32 _iPLLR = 30;
  if (this->_ipllr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(30, this->_ipllr(), output);
  }

  // sint32 _iPLMR = 31;
  if (this->_iplmr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(31, this->_iplmr(), output);
  }

  // sint32 _iPLMana = 32;
  if (this->_iplmana() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(32, this->_iplmana(), output);
  }

  // sint32 _iPLHP = 33;
  if (this->_iplhp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(33, this->_iplhp(), output);
  }

  // sint32 _iPLDamMod = 34;
  if (this->_ipldammod() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(34, this->_ipldammod(), output);
  }

  // sint32 _iPLGetHit = 35;
  if (this->_iplgethit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(35, this->_iplgethit(), output);
  }

  // sint32 _iPLLight = 36;
  if (this->_ipllight() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(36, this->_ipllight(), output);
  }

  // sint32 _iSplLvlAdd = 37;
  if (this->_ispllvladd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(37, this->_ispllvladd(), output);
  }

  // sint32 _iFMinDam = 38;
  if (this->_ifmindam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(38, this->_ifmindam(), output);
  }

  // sint32 _iFMaxDam = 39;
  if (this->_ifmaxdam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(39, this->_ifmaxdam(), output);
  }

  // sint32 _iLMinDam = 40;
  if (this->_ilmindam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(40, this->_ilmindam(), output);
  }

  // sint32 _iLMaxDam = 41;
  if (this->_ilmaxdam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(41, this->_ilmaxdam(), output);
  }

  // sint32 _iPrePower = 42;
  if (this->_iprepower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(42, this->_iprepower(), output);
  }

  // sint32 _iSufPower = 43;
  if (this->_isufpower() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(43, this->_isufpower(), output);
  }

  // sint32 _iMinStr = 44;
  if (this->_iminstr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(44, this->_iminstr(), output);
  }

  // sint32 _iMinMag = 45;
  if (this->_iminmag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(45, this->_iminmag(), output);
  }

  // sint32 _iMinDex = 46;
  if (this->_imindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(46, this->_imindex(), output);
  }

  // bool _iStatFlag = 47;
  if (this->_istatflag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(47, this->_istatflag(), output);
  }

  // sint32 IDidx = 48;
  if (this->ididx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(48, this->ididx(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.data.ItemData)
}

size_t ItemData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.data.ItemData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // string _iName = 7;
  if (this->_iname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_iname());
  }

  // string _iIName = 8;
  if (this->_iiname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_iiname());
  }

  // uint32 ID = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // sint32 _itype = 2;
  if (this->_itype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_itype());
  }

  // sint32 _ix = 3;
  if (this->_ix() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ix());
  }

  // sint32 _iy = 4;
  if (this->_iy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iy());
  }

  // uint32 _iMagical = 6;
  if (this->_imagical() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_imagical());
  }

  // uint32 _iClass = 9;
  if (this->_iclass() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_iclass());
  }

  // sint32 _iCurs = 10;
  if (this->_icurs() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_icurs());
  }

  // sint32 _iValue = 11;
  if (this->_ivalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ivalue());
  }

  // sint32 _iMinDam = 12;
  if (this->_imindam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_imindam());
  }

  // sint32 _iMaxDam = 13;
  if (this->_imaxdam() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_imaxdam());
  }

  // sint32 _iAC = 14;
  if (this->_iac() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iac());
  }

  // sint32 _iFlags = 15;
  if (this->_iflags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iflags());
  }

  // sint32 _iMiscId = 16;
  if (this->_imiscid() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_imiscid());
  }

  // sint32 _iSpell = 17;
  if (this->_ispell() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ispell());
  }

  // sint32 _iCharges = 18;
  if (this->_icharges() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_icharges());
  }

  // sint32 _iMaxCharges = 19;
  if (this->_imaxcharges() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_imaxcharges());
  }

  // sint32 _iDurability = 20;
  if (this->_idurability() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_idurability());
  }

  // sint32 _iMaxDur = 21;
  if (this->_imaxdur() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_imaxdur());
  }

  // sint32 _iPLDam = 22;
  if (this->_ipldam() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ipldam());
  }

  // sint32 _iPLToHit = 23;
  if (this->_ipltohit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ipltohit());
  }

  // sint32 _iPLAC = 24;
  if (this->_iplac() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iplac());
  }

  // sint32 _iPLStr = 25;
  if (this->_iplstr() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iplstr());
  }

  // sint32 _iPLMag = 26;
  if (this->_iplmag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iplmag());
  }

  // bool _iIdentified = 5;
  if (this->_iidentified() != 0) {
    total_size += 1 + 1;
  }

  // bool _iStatFlag = 47;
  if (this->_istatflag() != 0) {
    total_size += 2 + 1;
  }

  // sint32 _iPLDex = 27;
  if (this->_ipldex() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ipldex());
  }

  // sint32 _iPLVit = 28;
  if (this->_iplvit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iplvit());
  }

  // sint32 _iPLFR = 29;
  if (this->_iplfr() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iplfr());
  }

  // sint32 _iPLLR = 30;
  if (this->_ipllr() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ipllr());
  }

  // sint32 _iPLMR = 31;
  if (this->_iplmr() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iplmr());
  }

  // sint32 _iPLMana = 32;
  if (this->_iplmana() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iplmana());
  }

  // sint32 _iPLHP = 33;
  if (this->_iplhp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iplhp());
  }

  // sint32 _iPLDamMod = 34;
  if (this->_ipldammod() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ipldammod());
  }

  // sint32 _iPLGetHit = 35;
  if (this->_iplgethit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iplgethit());
  }

  // sint32 _iPLLight = 36;
  if (this->_ipllight() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ipllight());
  }

  // sint32 _iSplLvlAdd = 37;
  if (this->_ispllvladd() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ispllvladd());
  }

  // sint32 _iFMinDam = 38;
  if (this->_ifmindam() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ifmindam());
  }

  // sint32 _iFMaxDam = 39;
  if (this->_ifmaxdam() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ifmaxdam());
  }

  // sint32 _iLMinDam = 40;
  if (this->_ilmindam() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ilmindam());
  }

  // sint32 _iLMaxDam = 41;
  if (this->_ilmaxdam() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_ilmaxdam());
  }

  // sint32 _iPrePower = 42;
  if (this->_iprepower() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iprepower());
  }

  // sint32 _iSufPower = 43;
  if (this->_isufpower() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_isufpower());
  }

  // sint32 _iMinStr = 44;
  if (this->_iminstr() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iminstr());
  }

  // sint32 _iMinMag = 45;
  if (this->_iminmag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_iminmag());
  }

  // sint32 _iMinDex = 46;
  if (this->_imindex() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_imindex());
  }

  // sint32 IDidx = 48;
  if (this->ididx() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->ididx());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ItemData*>(&from));
}

void ItemData::MergeFrom(const ItemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.data.ItemData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._iname().size() > 0) {

    _iname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._iname_);
  }
  if (from._iiname().size() > 0) {

    _iiname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._iiname_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from._itype() != 0) {
    set__itype(from._itype());
  }
  if (from._ix() != 0) {
    set__ix(from._ix());
  }
  if (from._iy() != 0) {
    set__iy(from._iy());
  }
  if (from._imagical() != 0) {
    set__imagical(from._imagical());
  }
  if (from._iclass() != 0) {
    set__iclass(from._iclass());
  }
  if (from._icurs() != 0) {
    set__icurs(from._icurs());
  }
  if (from._ivalue() != 0) {
    set__ivalue(from._ivalue());
  }
  if (from._imindam() != 0) {
    set__imindam(from._imindam());
  }
  if (from._imaxdam() != 0) {
    set__imaxdam(from._imaxdam());
  }
  if (from._iac() != 0) {
    set__iac(from._iac());
  }
  if (from._iflags() != 0) {
    set__iflags(from._iflags());
  }
  if (from._imiscid() != 0) {
    set__imiscid(from._imiscid());
  }
  if (from._ispell() != 0) {
    set__ispell(from._ispell());
  }
  if (from._icharges() != 0) {
    set__icharges(from._icharges());
  }
  if (from._imaxcharges() != 0) {
    set__imaxcharges(from._imaxcharges());
  }
  if (from._idurability() != 0) {
    set__idurability(from._idurability());
  }
  if (from._imaxdur() != 0) {
    set__imaxdur(from._imaxdur());
  }
  if (from._ipldam() != 0) {
    set__ipldam(from._ipldam());
  }
  if (from._ipltohit() != 0) {
    set__ipltohit(from._ipltohit());
  }
  if (from._iplac() != 0) {
    set__iplac(from._iplac());
  }
  if (from._iplstr() != 0) {
    set__iplstr(from._iplstr());
  }
  if (from._iplmag() != 0) {
    set__iplmag(from._iplmag());
  }
  if (from._iidentified() != 0) {
    set__iidentified(from._iidentified());
  }
  if (from._istatflag() != 0) {
    set__istatflag(from._istatflag());
  }
  if (from._ipldex() != 0) {
    set__ipldex(from._ipldex());
  }
  if (from._iplvit() != 0) {
    set__iplvit(from._iplvit());
  }
  if (from._iplfr() != 0) {
    set__iplfr(from._iplfr());
  }
  if (from._ipllr() != 0) {
    set__ipllr(from._ipllr());
  }
  if (from._iplmr() != 0) {
    set__iplmr(from._iplmr());
  }
  if (from._iplmana() != 0) {
    set__iplmana(from._iplmana());
  }
  if (from._iplhp() != 0) {
    set__iplhp(from._iplhp());
  }
  if (from._ipldammod() != 0) {
    set__ipldammod(from._ipldammod());
  }
  if (from._iplgethit() != 0) {
    set__iplgethit(from._iplgethit());
  }
  if (from._ipllight() != 0) {
    set__ipllight(from._ipllight());
  }
  if (from._ispllvladd() != 0) {
    set__ispllvladd(from._ispllvladd());
  }
  if (from._ifmindam() != 0) {
    set__ifmindam(from._ifmindam());
  }
  if (from._ifmaxdam() != 0) {
    set__ifmaxdam(from._ifmaxdam());
  }
  if (from._ilmindam() != 0) {
    set__ilmindam(from._ilmindam());
  }
  if (from._ilmaxdam() != 0) {
    set__ilmaxdam(from._ilmaxdam());
  }
  if (from._iprepower() != 0) {
    set__iprepower(from._iprepower());
  }
  if (from._isufpower() != 0) {
    set__isufpower(from._isufpower());
  }
  if (from._iminstr() != 0) {
    set__iminstr(from._iminstr());
  }
  if (from._iminmag() != 0) {
    set__iminmag(from._iminmag());
  }
  if (from._imindex() != 0) {
    set__imindex(from._imindex());
  }
  if (from.ididx() != 0) {
    set_ididx(from.ididx());
  }
}

void ItemData::CopyFrom(const ItemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.data.ItemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemData::IsInitialized() const {
  return true;
}

void ItemData::Swap(ItemData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemData::InternalSwap(ItemData* other) {
  using std::swap;
  _iname_.Swap(&other->_iname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _iiname_.Swap(&other->_iiname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(_itype_, other->_itype_);
  swap(_ix_, other->_ix_);
  swap(_iy_, other->_iy_);
  swap(_imagical_, other->_imagical_);
  swap(_iclass_, other->_iclass_);
  swap(_icurs_, other->_icurs_);
  swap(_ivalue_, other->_ivalue_);
  swap(_imindam_, other->_imindam_);
  swap(_imaxdam_, other->_imaxdam_);
  swap(_iac_, other->_iac_);
  swap(_iflags_, other->_iflags_);
  swap(_imiscid_, other->_imiscid_);
  swap(_ispell_, other->_ispell_);
  swap(_icharges_, other->_icharges_);
  swap(_imaxcharges_, other->_imaxcharges_);
  swap(_idurability_, other->_idurability_);
  swap(_imaxdur_, other->_imaxdur_);
  swap(_ipldam_, other->_ipldam_);
  swap(_ipltohit_, other->_ipltohit_);
  swap(_iplac_, other->_iplac_);
  swap(_iplstr_, other->_iplstr_);
  swap(_iplmag_, other->_iplmag_);
  swap(_iidentified_, other->_iidentified_);
  swap(_istatflag_, other->_istatflag_);
  swap(_ipldex_, other->_ipldex_);
  swap(_iplvit_, other->_iplvit_);
  swap(_iplfr_, other->_iplfr_);
  swap(_ipllr_, other->_ipllr_);
  swap(_iplmr_, other->_iplmr_);
  swap(_iplmana_, other->_iplmana_);
  swap(_iplhp_, other->_iplhp_);
  swap(_ipldammod_, other->_ipldammod_);
  swap(_iplgethit_, other->_iplgethit_);
  swap(_ipllight_, other->_ipllight_);
  swap(_ispllvladd_, other->_ispllvladd_);
  swap(_ifmindam_, other->_ifmindam_);
  swap(_ifmaxdam_, other->_ifmaxdam_);
  swap(_ilmindam_, other->_ilmindam_);
  swap(_ilmaxdam_, other->_ilmaxdam_);
  swap(_iprepower_, other->_iprepower_);
  swap(_isufpower_, other->_isufpower_);
  swap(_iminstr_, other->_iminstr_);
  swap(_iminmag_, other->_iminmag_);
  swap(_imindex_, other->_imindex_);
  swap(ididx_, other->ididx_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string ItemData::GetTypeName() const {
  return "dapi.data.ItemData";
}


// ===================================================================

void PlayerData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerData::kPmodeFieldNumber;
const int PlayerData::kPnumFieldNumber;
const int PlayerData::kPlrlevelFieldNumber;
const int PlayerData::kPxFieldNumber;
const int PlayerData::kPyFieldNumber;
const int PlayerData::kPfutxFieldNumber;
const int PlayerData::kPfutyFieldNumber;
const int PlayerData::kPdirFieldNumber;
const int PlayerData::kPRSpellFieldNumber;
const int PlayerData::kPRsplTypeFieldNumber;
const int PlayerData::kPSplLvlFieldNumber;
const int PlayerData::kPMemSpellsFieldNumber;
const int PlayerData::kPAblSpellsFieldNumber;
const int PlayerData::kPScrlSpellsFieldNumber;
const int PlayerData::kPNameFieldNumber;
const int PlayerData::kPClassFieldNumber;
const int PlayerData::kPStrengthFieldNumber;
const int PlayerData::kPBaseStrFieldNumber;
const int PlayerData::kPMagicFieldNumber;
const int PlayerData::kPBaseMagFieldNumber;
const int PlayerData::kPDexterityFieldNumber;
const int PlayerData::kPBaseDexFieldNumber;
const int PlayerData::kPVitalityFieldNumber;
const int PlayerData::kPBaseVitFieldNumber;
const int PlayerData::kPStatPtsFieldNumber;
const int PlayerData::kPDamageModFieldNumber;
const int PlayerData::kPHitPointsFieldNumber;
const int PlayerData::kPMaxHPFieldNumber;
const int PlayerData::kPManaFieldNumber;
const int PlayerData::kPMaxManaFieldNumber;
const int PlayerData::kPLevelFieldNumber;
const int PlayerData::kPExperienceFieldNumber;
const int PlayerData::kPArmorClassFieldNumber;
const int PlayerData::kPMagResistFieldNumber;
const int PlayerData::kPFireResistFieldNumber;
const int PlayerData::kPLightResistFieldNumber;
const int PlayerData::kPGoldFieldNumber;
const int PlayerData::kInvBodyFieldNumber;
const int PlayerData::kInvListFieldNumber;
const int PlayerData::kInvGridFieldNumber;
const int PlayerData::kSpdListFieldNumber;
const int PlayerData::kHoldItemFieldNumber;
const int PlayerData::kPIACFieldNumber;
const int PlayerData::kPIMinDamFieldNumber;
const int PlayerData::kPIMaxDamFieldNumber;
const int PlayerData::kPIBonusDamFieldNumber;
const int PlayerData::kPIBonusToHitFieldNumber;
const int PlayerData::kPIBonusACFieldNumber;
const int PlayerData::kPIBonusDamModFieldNumber;
const int PlayerData::kPManaShieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerData::PlayerData()
  : ::google::protobuf::MessageLite(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_data_2eproto::scc_info_PlayerData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:dapi.data.PlayerData)
}
PlayerData::PlayerData(const PlayerData& from)
  : ::google::protobuf::MessageLite(),
      _internal_metadata_(NULL),
      _pspllvl_(from._pspllvl_),
      invbody_(from.invbody_),
      invlist_(from.invlist_),
      invgrid_(from.invgrid_),
      spdlist_(from.spdlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _pname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from._pname().size() > 0) {
    _pname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._pname_);
  }
  ::memcpy(&_pmode_, &from._pmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&pmanashield_) -
    reinterpret_cast<char*>(&_pmode_)) + sizeof(pmanashield_));
  // @@protoc_insertion_point(copy_constructor:dapi.data.PlayerData)
}

void PlayerData::SharedCtor() {
  _pname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_pmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pmanashield_) -
      reinterpret_cast<char*>(&_pmode_)) + sizeof(pmanashield_));
}

PlayerData::~PlayerData() {
  // @@protoc_insertion_point(destructor:dapi.data.PlayerData)
  SharedDtor();
}

void PlayerData::SharedDtor() {
  _pname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlayerData& PlayerData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_data_2eproto::scc_info_PlayerData.base);
  return *internal_default_instance();
}


void PlayerData::Clear() {
// @@protoc_insertion_point(message_clear_start:dapi.data.PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _pspllvl_.Clear();
  invbody_.Clear();
  invlist_.Clear();
  invgrid_.Clear();
  spdlist_.Clear();
  _pname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&_pmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pmanashield_) -
      reinterpret_cast<char*>(&_pmode_)) + sizeof(pmanashield_));
  _internal_metadata_.Clear();
}

bool PlayerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::LiteUnknownFieldSetter unknown_fields_setter(
      &_internal_metadata_);
  ::google::protobuf::io::StringOutputStream unknown_fields_output(
      unknown_fields_setter.buffer());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_output, false);
  // @@protoc_insertion_point(parse_start:dapi.data.PlayerData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 _pmode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_pmode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 pnum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &pnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 plrlevel = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &plrlevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _px = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_px_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _py = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_py_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _pfutx = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_pfutx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _pfuty = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_pfuty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _pdir = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_pdir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _pRSpell = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_prspell_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pRsplType = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_prspltype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 _pSplLvl = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable__pspllvl())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 90u, input, this->mutable__pspllvl())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _pMemSpells = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_pmemspells_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _pAblSpells = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_pablspells_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 _pScrlSpells = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &_pscrlspells_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string _pName = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__pname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->_pname().data(), static_cast<int>(this->_pname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "dapi.data.PlayerData._pName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pClass = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pclass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pStrength = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pstrength_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pBaseStr = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pbasestr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pMagic = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pmagic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pBaseMag = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pbasemag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pDexterity = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 168 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pdexterity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pBaseDex = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pbasedex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pVitality = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pvitality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pBaseVit = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 192 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pbasevit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pStatPts = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pstatpts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pDamageMod = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pdamagemod_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pHitPoints = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_phitpoints_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pMaxHP = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pmaxhp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 _pMana = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &_pmana_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pMaxMana = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pmaxmana_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pLevel = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_plevel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pExperience = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 256 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pexperience_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pArmorClass = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 264 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_parmorclass_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pMagResist = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 272 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pmagresist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pFireResist = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pfireresist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pLightResist = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 288 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_plightresist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pGold = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 296 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pgold_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 InvBody = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_invbody())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 304 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 306u, input, this->mutable_invbody())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 InvList = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_invlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 314u, input, this->mutable_invlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 InvGrid = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_invgrid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 322u, input, this->mutable_invgrid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 SpdList = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_spdlist())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 330u, input, this->mutable_spdlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 HoldItem = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 336 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &holditem_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pIAC = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 344 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_piac_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pIMinDam = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pimindam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pIMaxDam = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pimaxdam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pIBonusDam = 46;
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pibonusdam_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pIBonusToHit = 47;
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pibonustohit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pIBonusAC = 48;
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 384 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pibonusac_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 _pIBonusDamMod = 49;
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_pibonusdammod_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool pManaShield = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pmanashield_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dapi.data.PlayerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dapi.data.PlayerData)
  return false;
#undef DO_
}

void PlayerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dapi.data.PlayerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 _pmode = 1;
  if (this->_pmode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->_pmode(), output);
  }

  // sint32 pnum = 2;
  if (this->pnum() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pnum(), output);
  }

  // sint32 plrlevel = 3;
  if (this->plrlevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(3, this->plrlevel(), output);
  }

  // sint32 _px = 4;
  if (this->_px() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->_px(), output);
  }

  // sint32 _py = 5;
  if (this->_py() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(5, this->_py(), output);
  }

  // sint32 _pfutx = 6;
  if (this->_pfutx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(6, this->_pfutx(), output);
  }

  // sint32 _pfuty = 7;
  if (this->_pfuty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->_pfuty(), output);
  }

  // sint32 _pdir = 8;
  if (this->_pdir() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(8, this->_pdir(), output);
  }

  // sint32 _pRSpell = 9;
  if (this->_prspell() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(9, this->_prspell(), output);
  }

  // uint32 _pRsplType = 10;
  if (this->_prspltype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->_prspltype(), output);
  }

  // repeated uint32 _pSplLvl = 11;
  if (this->_pspllvl_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        __pspllvl_cached_byte_size_));
  }
  for (int i = 0, n = this->_pspllvl_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->_pspllvl(i), output);
  }

  // uint64 _pMemSpells = 12;
  if (this->_pmemspells() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(12, this->_pmemspells(), output);
  }

  // uint64 _pAblSpells = 13;
  if (this->_pablspells() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(13, this->_pablspells(), output);
  }

  // uint64 _pScrlSpells = 14;
  if (this->_pscrlspells() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->_pscrlspells(), output);
  }

  // string _pName = 15;
  if (this->_pname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->_pname().data(), static_cast<int>(this->_pname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "dapi.data.PlayerData._pName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->_pname(), output);
  }

  // uint32 _pClass = 16;
  if (this->_pclass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->_pclass(), output);
  }

  // uint32 _pStrength = 17;
  if (this->_pstrength() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->_pstrength(), output);
  }

  // uint32 _pBaseStr = 18;
  if (this->_pbasestr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(18, this->_pbasestr(), output);
  }

  // uint32 _pMagic = 19;
  if (this->_pmagic() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->_pmagic(), output);
  }

  // uint32 _pBaseMag = 20;
  if (this->_pbasemag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->_pbasemag(), output);
  }

  // uint32 _pDexterity = 21;
  if (this->_pdexterity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->_pdexterity(), output);
  }

  // uint32 _pBaseDex = 22;
  if (this->_pbasedex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(22, this->_pbasedex(), output);
  }

  // uint32 _pVitality = 23;
  if (this->_pvitality() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(23, this->_pvitality(), output);
  }

  // uint32 _pBaseVit = 24;
  if (this->_pbasevit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(24, this->_pbasevit(), output);
  }

  // uint32 _pStatPts = 25;
  if (this->_pstatpts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(25, this->_pstatpts(), output);
  }

  // uint32 _pDamageMod = 26;
  if (this->_pdamagemod() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(26, this->_pdamagemod(), output);
  }

  // uint32 _pHitPoints = 27;
  if (this->_phitpoints() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(27, this->_phitpoints(), output);
  }

  // uint32 _pMaxHP = 28;
  if (this->_pmaxhp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(28, this->_pmaxhp(), output);
  }

  // sint32 _pMana = 29;
  if (this->_pmana() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(29, this->_pmana(), output);
  }

  // uint32 _pMaxMana = 30;
  if (this->_pmaxmana() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(30, this->_pmaxmana(), output);
  }

  // uint32 _pLevel = 31;
  if (this->_plevel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(31, this->_plevel(), output);
  }

  // uint32 _pExperience = 32;
  if (this->_pexperience() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(32, this->_pexperience(), output);
  }

  // uint32 _pArmorClass = 33;
  if (this->_parmorclass() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(33, this->_parmorclass(), output);
  }

  // uint32 _pMagResist = 34;
  if (this->_pmagresist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(34, this->_pmagresist(), output);
  }

  // uint32 _pFireResist = 35;
  if (this->_pfireresist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(35, this->_pfireresist(), output);
  }

  // uint32 _pLightResist = 36;
  if (this->_plightresist() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(36, this->_plightresist(), output);
  }

  // uint32 _pGold = 37;
  if (this->_pgold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(37, this->_pgold(), output);
  }

  // repeated sint32 InvBody = 38;
  if (this->invbody_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(38, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _invbody_cached_byte_size_));
  }
  for (int i = 0, n = this->invbody_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->invbody(i), output);
  }

  // repeated sint32 InvList = 39;
  if (this->invlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(39, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _invlist_cached_byte_size_));
  }
  for (int i = 0, n = this->invlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->invlist(i), output);
  }

  // repeated sint32 InvGrid = 40;
  if (this->invgrid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(40, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _invgrid_cached_byte_size_));
  }
  for (int i = 0, n = this->invgrid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->invgrid(i), output);
  }

  // repeated sint32 SpdList = 41;
  if (this->spdlist_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(41, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _spdlist_cached_byte_size_));
  }
  for (int i = 0, n = this->spdlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->spdlist(i), output);
  }

  // sint32 HoldItem = 42;
  if (this->holditem() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(42, this->holditem(), output);
  }

  // uint32 _pIAC = 43;
  if (this->_piac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(43, this->_piac(), output);
  }

  // uint32 _pIMinDam = 44;
  if (this->_pimindam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(44, this->_pimindam(), output);
  }

  // uint32 _pIMaxDam = 45;
  if (this->_pimaxdam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(45, this->_pimaxdam(), output);
  }

  // uint32 _pIBonusDam = 46;
  if (this->_pibonusdam() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(46, this->_pibonusdam(), output);
  }

  // uint32 _pIBonusToHit = 47;
  if (this->_pibonustohit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(47, this->_pibonustohit(), output);
  }

  // uint32 _pIBonusAC = 48;
  if (this->_pibonusac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(48, this->_pibonusac(), output);
  }

  // uint32 _pIBonusDamMod = 49;
  if (this->_pibonusdammod() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(49, this->_pibonusdammod(), output);
  }

  // bool pManaShield = 50;
  if (this->pmanashield() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(50, this->pmanashield(), output);
  }

  output->WriteRaw((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).data(),
                   static_cast<int>((::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size()));
  // @@protoc_insertion_point(serialize_end:dapi.data.PlayerData)
}

size_t PlayerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dapi.data.PlayerData)
  size_t total_size = 0;

  total_size += (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()).size();

  // repeated uint32 _pSplLvl = 11;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->_pspllvl_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    __pspllvl_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 InvBody = 38;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->invbody_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _invbody_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 InvList = 39;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->invlist_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _invlist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 InvGrid = 40;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->invgrid_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _invgrid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 SpdList = 41;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->spdlist_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _spdlist_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string _pName = 15;
  if (this->_pname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->_pname());
  }

  // sint32 _pmode = 1;
  if (this->_pmode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_pmode());
  }

  // sint32 pnum = 2;
  if (this->pnum() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->pnum());
  }

  // sint32 plrlevel = 3;
  if (this->plrlevel() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->plrlevel());
  }

  // sint32 _px = 4;
  if (this->_px() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_px());
  }

  // sint32 _py = 5;
  if (this->_py() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_py());
  }

  // sint32 _pfutx = 6;
  if (this->_pfutx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_pfutx());
  }

  // sint32 _pfuty = 7;
  if (this->_pfuty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_pfuty());
  }

  // sint32 _pdir = 8;
  if (this->_pdir() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_pdir());
  }

  // sint32 _pRSpell = 9;
  if (this->_prspell() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_prspell());
  }

  // uint32 _pRsplType = 10;
  if (this->_prspltype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_prspltype());
  }

  // uint64 _pMemSpells = 12;
  if (this->_pmemspells() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_pmemspells());
  }

  // uint64 _pAblSpells = 13;
  if (this->_pablspells() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_pablspells());
  }

  // uint64 _pScrlSpells = 14;
  if (this->_pscrlspells() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->_pscrlspells());
  }

  // uint32 _pClass = 16;
  if (this->_pclass() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pclass());
  }

  // uint32 _pStrength = 17;
  if (this->_pstrength() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pstrength());
  }

  // uint32 _pBaseStr = 18;
  if (this->_pbasestr() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pbasestr());
  }

  // uint32 _pMagic = 19;
  if (this->_pmagic() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pmagic());
  }

  // uint32 _pBaseMag = 20;
  if (this->_pbasemag() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pbasemag());
  }

  // uint32 _pDexterity = 21;
  if (this->_pdexterity() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pdexterity());
  }

  // uint32 _pBaseDex = 22;
  if (this->_pbasedex() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pbasedex());
  }

  // uint32 _pVitality = 23;
  if (this->_pvitality() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pvitality());
  }

  // uint32 _pBaseVit = 24;
  if (this->_pbasevit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pbasevit());
  }

  // uint32 _pStatPts = 25;
  if (this->_pstatpts() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pstatpts());
  }

  // uint32 _pDamageMod = 26;
  if (this->_pdamagemod() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pdamagemod());
  }

  // uint32 _pHitPoints = 27;
  if (this->_phitpoints() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_phitpoints());
  }

  // uint32 _pMaxHP = 28;
  if (this->_pmaxhp() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pmaxhp());
  }

  // sint32 _pMana = 29;
  if (this->_pmana() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->_pmana());
  }

  // uint32 _pMaxMana = 30;
  if (this->_pmaxmana() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pmaxmana());
  }

  // uint32 _pLevel = 31;
  if (this->_plevel() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_plevel());
  }

  // uint32 _pExperience = 32;
  if (this->_pexperience() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pexperience());
  }

  // uint32 _pArmorClass = 33;
  if (this->_parmorclass() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_parmorclass());
  }

  // uint32 _pMagResist = 34;
  if (this->_pmagresist() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pmagresist());
  }

  // uint32 _pFireResist = 35;
  if (this->_pfireresist() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pfireresist());
  }

  // uint32 _pLightResist = 36;
  if (this->_plightresist() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_plightresist());
  }

  // uint32 _pGold = 37;
  if (this->_pgold() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pgold());
  }

  // sint32 HoldItem = 42;
  if (this->holditem() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->holditem());
  }

  // uint32 _pIAC = 43;
  if (this->_piac() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_piac());
  }

  // uint32 _pIMinDam = 44;
  if (this->_pimindam() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pimindam());
  }

  // uint32 _pIMaxDam = 45;
  if (this->_pimaxdam() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pimaxdam());
  }

  // uint32 _pIBonusDam = 46;
  if (this->_pibonusdam() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pibonusdam());
  }

  // uint32 _pIBonusToHit = 47;
  if (this->_pibonustohit() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pibonustohit());
  }

  // uint32 _pIBonusAC = 48;
  if (this->_pibonusac() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pibonusac());
  }

  // uint32 _pIBonusDamMod = 49;
  if (this->_pibonusdammod() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->_pibonusdammod());
  }

  // bool pManaShield = 50;
  if (this->pmanashield() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlayerData::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const PlayerData*>(&from));
}

void PlayerData::MergeFrom(const PlayerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dapi.data.PlayerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _pspllvl_.MergeFrom(from._pspllvl_);
  invbody_.MergeFrom(from.invbody_);
  invlist_.MergeFrom(from.invlist_);
  invgrid_.MergeFrom(from.invgrid_);
  spdlist_.MergeFrom(from.spdlist_);
  if (from._pname().size() > 0) {

    _pname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from._pname_);
  }
  if (from._pmode() != 0) {
    set__pmode(from._pmode());
  }
  if (from.pnum() != 0) {
    set_pnum(from.pnum());
  }
  if (from.plrlevel() != 0) {
    set_plrlevel(from.plrlevel());
  }
  if (from._px() != 0) {
    set__px(from._px());
  }
  if (from._py() != 0) {
    set__py(from._py());
  }
  if (from._pfutx() != 0) {
    set__pfutx(from._pfutx());
  }
  if (from._pfuty() != 0) {
    set__pfuty(from._pfuty());
  }
  if (from._pdir() != 0) {
    set__pdir(from._pdir());
  }
  if (from._prspell() != 0) {
    set__prspell(from._prspell());
  }
  if (from._prspltype() != 0) {
    set__prspltype(from._prspltype());
  }
  if (from._pmemspells() != 0) {
    set__pmemspells(from._pmemspells());
  }
  if (from._pablspells() != 0) {
    set__pablspells(from._pablspells());
  }
  if (from._pscrlspells() != 0) {
    set__pscrlspells(from._pscrlspells());
  }
  if (from._pclass() != 0) {
    set__pclass(from._pclass());
  }
  if (from._pstrength() != 0) {
    set__pstrength(from._pstrength());
  }
  if (from._pbasestr() != 0) {
    set__pbasestr(from._pbasestr());
  }
  if (from._pmagic() != 0) {
    set__pmagic(from._pmagic());
  }
  if (from._pbasemag() != 0) {
    set__pbasemag(from._pbasemag());
  }
  if (from._pdexterity() != 0) {
    set__pdexterity(from._pdexterity());
  }
  if (from._pbasedex() != 0) {
    set__pbasedex(from._pbasedex());
  }
  if (from._pvitality() != 0) {
    set__pvitality(from._pvitality());
  }
  if (from._pbasevit() != 0) {
    set__pbasevit(from._pbasevit());
  }
  if (from._pstatpts() != 0) {
    set__pstatpts(from._pstatpts());
  }
  if (from._pdamagemod() != 0) {
    set__pdamagemod(from._pdamagemod());
  }
  if (from._phitpoints() != 0) {
    set__phitpoints(from._phitpoints());
  }
  if (from._pmaxhp() != 0) {
    set__pmaxhp(from._pmaxhp());
  }
  if (from._pmana() != 0) {
    set__pmana(from._pmana());
  }
  if (from._pmaxmana() != 0) {
    set__pmaxmana(from._pmaxmana());
  }
  if (from._plevel() != 0) {
    set__plevel(from._plevel());
  }
  if (from._pexperience() != 0) {
    set__pexperience(from._pexperience());
  }
  if (from._parmorclass() != 0) {
    set__parmorclass(from._parmorclass());
  }
  if (from._pmagresist() != 0) {
    set__pmagresist(from._pmagresist());
  }
  if (from._pfireresist() != 0) {
    set__pfireresist(from._pfireresist());
  }
  if (from._plightresist() != 0) {
    set__plightresist(from._plightresist());
  }
  if (from._pgold() != 0) {
    set__pgold(from._pgold());
  }
  if (from.holditem() != 0) {
    set_holditem(from.holditem());
  }
  if (from._piac() != 0) {
    set__piac(from._piac());
  }
  if (from._pimindam() != 0) {
    set__pimindam(from._pimindam());
  }
  if (from._pimaxdam() != 0) {
    set__pimaxdam(from._pimaxdam());
  }
  if (from._pibonusdam() != 0) {
    set__pibonusdam(from._pibonusdam());
  }
  if (from._pibonustohit() != 0) {
    set__pibonustohit(from._pibonustohit());
  }
  if (from._pibonusac() != 0) {
    set__pibonusac(from._pibonusac());
  }
  if (from._pibonusdammod() != 0) {
    set__pibonusdammod(from._pibonusdammod());
  }
  if (from.pmanashield() != 0) {
    set_pmanashield(from.pmanashield());
  }
}

void PlayerData::CopyFrom(const PlayerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dapi.data.PlayerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerData::IsInitialized() const {
  return true;
}

void PlayerData::Swap(PlayerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerData::InternalSwap(PlayerData* other) {
  using std::swap;
  _pspllvl_.InternalSwap(&other->_pspllvl_);
  invbody_.InternalSwap(&other->invbody_);
  invlist_.InternalSwap(&other->invlist_);
  invgrid_.InternalSwap(&other->invgrid_);
  spdlist_.InternalSwap(&other->spdlist_);
  _pname_.Swap(&other->_pname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_pmode_, other->_pmode_);
  swap(pnum_, other->pnum_);
  swap(plrlevel_, other->plrlevel_);
  swap(_px_, other->_px_);
  swap(_py_, other->_py_);
  swap(_pfutx_, other->_pfutx_);
  swap(_pfuty_, other->_pfuty_);
  swap(_pdir_, other->_pdir_);
  swap(_prspell_, other->_prspell_);
  swap(_prspltype_, other->_prspltype_);
  swap(_pmemspells_, other->_pmemspells_);
  swap(_pablspells_, other->_pablspells_);
  swap(_pscrlspells_, other->_pscrlspells_);
  swap(_pclass_, other->_pclass_);
  swap(_pstrength_, other->_pstrength_);
  swap(_pbasestr_, other->_pbasestr_);
  swap(_pmagic_, other->_pmagic_);
  swap(_pbasemag_, other->_pbasemag_);
  swap(_pdexterity_, other->_pdexterity_);
  swap(_pbasedex_, other->_pbasedex_);
  swap(_pvitality_, other->_pvitality_);
  swap(_pbasevit_, other->_pbasevit_);
  swap(_pstatpts_, other->_pstatpts_);
  swap(_pdamagemod_, other->_pdamagemod_);
  swap(_phitpoints_, other->_phitpoints_);
  swap(_pmaxhp_, other->_pmaxhp_);
  swap(_pmana_, other->_pmana_);
  swap(_pmaxmana_, other->_pmaxmana_);
  swap(_plevel_, other->_plevel_);
  swap(_pexperience_, other->_pexperience_);
  swap(_parmorclass_, other->_parmorclass_);
  swap(_pmagresist_, other->_pmagresist_);
  swap(_pfireresist_, other->_pfireresist_);
  swap(_plightresist_, other->_plightresist_);
  swap(_pgold_, other->_pgold_);
  swap(holditem_, other->holditem_);
  swap(_piac_, other->_piac_);
  swap(_pimindam_, other->_pimindam_);
  swap(_pimaxdam_, other->_pimaxdam_);
  swap(_pibonusdam_, other->_pibonusdam_);
  swap(_pibonustohit_, other->_pibonustohit_);
  swap(_pibonusac_, other->_pibonusac_);
  swap(_pibonusdammod_, other->_pibonusdammod_);
  swap(pmanashield_, other->pmanashield_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::std::string PlayerData::GetTypeName() const {
  return "dapi.data.PlayerData";
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace data
}  // namespace dapi
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::data::QuestData* Arena::CreateMaybeMessage< ::dapi::data::QuestData >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::data::QuestData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::data::PortalData* Arena::CreateMaybeMessage< ::dapi::data::PortalData >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::data::PortalData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::data::MissileData* Arena::CreateMaybeMessage< ::dapi::data::MissileData >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::data::MissileData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::data::ObjectData* Arena::CreateMaybeMessage< ::dapi::data::ObjectData >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::data::ObjectData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::data::MonsterData* Arena::CreateMaybeMessage< ::dapi::data::MonsterData >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::data::MonsterData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::data::TriggerData* Arena::CreateMaybeMessage< ::dapi::data::TriggerData >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::data::TriggerData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::data::TileData* Arena::CreateMaybeMessage< ::dapi::data::TileData >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::data::TileData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::data::TownerData* Arena::CreateMaybeMessage< ::dapi::data::TownerData >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::data::TownerData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::data::ItemData* Arena::CreateMaybeMessage< ::dapi::data::ItemData >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::data::ItemData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::dapi::data::PlayerData* Arena::CreateMaybeMessage< ::dapi::data::PlayerData >(Arena* arena) {
  return Arena::CreateInternal< ::dapi::data::PlayerData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
